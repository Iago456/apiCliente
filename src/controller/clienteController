const clienteService = require('../service/clienteService');

module.exports = {
    findAll: async (req, res)=> {
        let json = {error:'', result:[]};

        let clientes = await clienteService.findAll();

        for(let i in clientes){
            json.result.push({
                id: clientes[i].id,
                nome: clientes[i].nome,
                cpf: clientes[i].cpf,
                telefone: clientes[i].telefone
            });
        }
        res.json(json);
    },
    findById: async(req, res) => {
        let json = {error:'', result:{}};

        let id = req.params.id;
        let cliente = await clienteService.findById(id);
        
        if (cliente){
            json.result = cliente;
        }

        res.json(json);
    },
    insert: async(req, res) => {
        let json = {error:'', result:{}};

        let nome = req.body.nome;
        let cpf = req.body.cpf;
        let telefone = req.body.telefone;
        
        if (nome && cpf && telefone){
            let clienteId = await clienteService.insert(nome, cpf, telefone);
            json.result = {
                id: clienteId,
                nome,
                cpf,
                telefone
            };
        }else{
            json.error = 'Campos não enviados'
        }

        res.json(json);
    },
    update: async(req, res) => {
        let json = {error:'', result:{}};

        let id = req.body.id;
        let nome = req.body.nome;
        let cpf = req.body.cpf;
        let telefone = req.body.telefone;
        
        if (id && nome && cpf && telefone){
            await clienteService.update(nome, cpf, telefone, id);
            json.result = {
                id,
                nome,
                cpf,
                telefone
            };
        }else{
            json.error = 'Campos não enviados'
        }

        res.json(json);
    },
    delete: async(req, res) => {
        let json = {error:'', result:{}};

        await clienteService.delete(req.params.id);

        res.json(json);
    }
}
